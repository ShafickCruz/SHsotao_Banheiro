/*
 Name:		sotao_banheiro.ino
 Created:	29/01/2023 19:48:42
 Author:	Shafick Cruz
*/

/*
NTC B3950 Thermistor
--------------------
the formula for temp in kelvin is
                1
T = ----------------------------
    1/To + (1/beta) * ln(Rt/Ro)

https://en.wikipedia.org/wiki/Thermistor

ESP32 ADC non-liear issue
https://www.esp32.com/viewtopic.php?t=1045
https://github.com/espressif/esp-idf/issues/164
https://docs.espressif.com/projects/esp-idf/en/latest/api-reference/peripherals/adc.html#adc-calibration
*/

/*
* INFORMAÇÕES DESTE ESP32
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 34:86:5d:3a:3c:70
*/

/*
MAC DO ESP32 BANHEIRA: CC : 7B : 5C : F0 : 88 : E4
0xcc, 0x7b, 0x5c, 0xf0, 0x88, 0xe4
*/

/*
RECONHECIMENTO DE COMANDOS
Toda comunicação deve ser precedida do texto de identificação em hexa
Após o identificador deve haver um ponto
Após o ponto deve haver o numero que identifica o comando
O texto (SH HOME) convertido para hexadecimal(String to Hex)
(Tem que ser tudo em maiusculo)
https://codebeautify.org/string-hex-converter
Ex. SH HOME.1 (534820484f4d45.0)
Desta forma saberá que é uma comunicação oficial para executar o comando 1
*/

// BIBLIOTECAS

/*
Dependency Graph
|-- SHtools_ESP32_OTA_AP @ 2.0.0+sha.705441c
|-- OneButton @ 2.6.1
|-- AsyncTCP @ 3.2.5
|-- ElegantOTA @ 3.1.5
|-- ESPAsyncWebServer @ 3.3.1
|-- WiFi @ 2.0.0
*/

#include <Arduino.h>
#include <WiFi.h>
#include <ElegantOTA.h>
#include <AsyncTCP.h>
#include <ESPAsyncWebServer.h>
#include <esp_now.h>
#include <OneButton.h>
#include <SHtools_ESP32_OTA_AP.h>

// GPIO
// -- input
#define PIN_DUCHE_LUZ_IN GPIO_NUM_39
#define PIN_DESCARGA_IN GPIO_NUM_36
#define PIN_AUDIO_IN GPIO_NUM_34
#define PIN_AQUECEDOR_IN GPIO_NUM_35
#define PIN_LUZ_AMBIENTE_IN GPIO_NUM_32
#define PIN_PIR GPIO_NUM_26
#define PIN_DUCHE_FLUXO GPIO_NUM_25
#define PIN_DUCHE_TEMPERATURA GPIO_NUM_33
#define PIN_RELE8_IN GPIO_NUM_16
#define PIN_RELE7_IN GPIO_NUM_21 // QUANDO FOR FAZER O HARDWARE DEFINITIVO, TROCAR O PINO 19 COM O 21
#define PIN_UPDATE GPIO_NUM_19   // POR QUESTÃO DE ORGANIZAÇÃO, POIS ASSIM O RELE7 USARÁ OS PINOS 18 E 19
                                 // AO INVÉS DE 18 E 21. E O BOTAO UPDATE PASSA DO 19 PARA O 21

// -- output
#define PIN_AQUECEDOR_OUT GPIO_NUM_27
#define PIN_AUDIO_OUT GPIO_NUM_14
#define PIN_DESCARGA_OUT GPIO_NUM_12
#define PIN_DUCHE_LUZ_OUT GPIO_NUM_13

#define PIN_LUZ_AMBIENTE_OUT GPIO_NUM_15
#define PIN_DUCHE_LEDS_OUT GPIO_NUM_4

#define PIN_BUZZER GPIO_NUM_5

#define PIN_RELE8_OUT GPIO_NUM_17
#define PIN_RELE7_OUT GPIO_NUM_18

// VARIAVEIS

// -- COMUNS
const int DEBOUNCE_DELAY = 150;                 // Tempo de debounce em milissegundos
const char comID[] = "534820484f4d45";          // Identificador de comando oficial
unsigned long restart_momentoInicial;           // Variável para armazenar o momento inicial
const unsigned long restart_periodo = 86400000; // 24 horas em milissegundos

// -- Endereço MAC em hexa do ESP32 com o qual este esp se emparelhará
static uint8_t PEER[]{0xcc, 0x7b, 0x5c, 0xf0, 0x88, 0xe4};

// -- DESCARGA
const int descarga_tempo1 = 7000;          // tempo de abertura/fechamento numero1
const int descarga_tempo2 = 10000;         // tempo de abertura/fechamento numero2
const int descarga_tempoMax = 15000;       // tempo maximo de abertura
const int descarga_tempoAlarme = 30000;    // tempo de alerta de pane
const int descarga_MargemSeguranca = 2000; // tempo de margem de segurança para fechamento
bool descarga_abrindo = false;
bool descarga_fechando = false;
bool descarga_habilitada = true;
bool descarga_ModoOnDemand = false;
unsigned long descarga_inicioTempoEspera = 0;
int descarga_tempoEspera = 0;

// -- LUZ AMBIENTE
unsigned long LuazAmbiente_contador = 0;           // Guarda o millis() atual somado ao tempo maximo que a luz ficará ligada
const int LuzAmbiente_tempoMax = 180000;           // tempo que a luz ambiente permanecerá acesa. Em millis
bool LuzAmbiente_UltimoEstado = LOW;               // guarda o ultimo estado da luz ambiente
unsigned long LuzAmbiente_UltimaMudanca = 0;       // guarda o momento da ultima mudança de estado da luz ambiente
bool LuzAmbiente_EstagioInicial = false;           // indica se é o estágio inicial de luz ambiente onde todas as luzes ambiente serão acesas
const int LuzAmbiente_EstagioInicial_tempo = 5000; // tempo em que todas as luzes ambiente permanecerão acesas no estagio inicial
unsigned long LuzAmbiente_EstagioInicial_UltimoON; // guarda o ultimo momento em que foram acesas

// ESTADO DOS RECURSOS
bool banheiraLed_ON = false;
bool audio_ON = false;
bool aquecedor_ON = false;
bool ducheLuz_ON = false;
bool ducheLed_ON = false;
bool rele7_on = false;
bool rele8_on = false;
bool descarga_ON = false;    // descarga em uso?
bool LuzAmbiente_ON = false; // luz ambiente ligada?

// -- PIR
unsigned long pir_ultimaLeitura = 0;   // guarda o momento da ultima leitura do pir
const int pir_intervaloLeitura = 3000; // intervalo entre elituras do pir

// -- SENSOR DE FLUXO
volatile int fluxo_numPulsos = 0;         // Contador de pulsos recebidos do sensor de fluxo
unsigned long fluxo_previousMillis = 0;   // Armazena o valor de millis() anterior
const int fluxo_intervaloLeituras = 1000; // Intervalo entre leituras. Em millis
const int fluxo_qntLeituras = 3;          // Quantidade de leituras a serem efetuada
const int fluxo_vazaoMinima = 2;          // Vazão mínima para definir chuveiro como ligado
bool chuveiroLigado = false;              // define se o chuveiro está ligado com basena media de leituras de vazão L/min

// -- SENSOR DE TEMPERATURA NTC50k
double ntc_adcMax, ntc_Vs;
double ntc_R1 = 51000.0;  // voltage divider resistor value (eu nao tinha de 50k)
double ntc_Beta = 3950.0; // Beta value
double ntc_To = 298.15;   // Temperature in Kelvin for 25 degree Celsius
double ntc_Ro = 50000.0;  // Resistance of Thermistor at 25 degree Celsius

unsigned long ntc_ultimoMillis = 0;
const long ntc_intervalo = 3000; // Intervalo de 3 segundos

#define ntc_WINDOW_SIZE 10
double ntc_readings[ntc_WINDOW_SIZE]; // as leituras do sensor
int ntc_currentIndex = 0;             // o índice atual na janela
double ntc_sum = 0;                   // a soma das leituras na janela

// The ESP32 lookup table varies from device to device, use the program from
// https://github.com/e-tinkers/esp32-adc-calibrate
// to generate lookup table for your own ESP32

const float ADC_LUT[4096] = {0,
                             97.6000, 100.0000, 102.6000, 105.0000, 107.6000, 110.0000, 112.4000, 114.0000, 115.4000, 117.0000, 118.4000, 120.0000, 121.4000, 123.0000, 124.4000,
                             126.0000, 127.6000, 128.8000, 129.8000, 130.8000, 131.8000, 132.6000, 133.6000, 134.6000, 135.4000, 136.4000, 137.2000, 138.2000, 139.2000, 140.0000,
                             141.0000, 142.0000, 143.0000, 144.0000, 145.0000, 146.2000, 147.6000, 148.8000, 149.8000, 150.8000, 152.0000, 153.0000, 154.2000, 155.4000, 156.8000,
                             157.8000, 158.8000, 160.0000, 161.0000, 162.0000, 163.0000, 164.0000, 165.0000, 166.0000, 167.0000, 168.0000, 169.0000, 169.8000, 170.8000, 171.8000,
                             172.8000, 173.8000, 174.8000, 175.8000, 176.8000, 178.0000, 179.0000, 180.0000, 181.0000, 182.0000, 183.0000, 184.0000, 185.2000, 186.2000, 187.4000,
                             188.4000, 189.6000, 190.6000, 191.8000, 192.8000, 193.8000, 195.0000, 196.0000, 197.0000, 198.2000, 199.4000, 200.6000, 201.8000, 202.8000, 203.8000,
                             205.0000, 206.0000, 207.0000, 208.2000, 209.2000, 210.2000, 211.0000, 212.0000, 213.0000, 214.0000, 215.0000, 216.0000, 217.0000, 218.0000, 219.0000,
                             220.0000, 220.8000, 221.8000, 222.8000, 223.8000, 224.8000, 225.8000, 226.8000, 227.8000, 228.8000, 229.8000, 230.8000, 231.8000, 232.8000, 233.8000,
                             234.8000, 235.8000, 236.8000, 237.8000, 238.8000, 239.8000, 241.8000, 244.0000, 246.4000, 248.8000, 251.0000, 253.6000, 256.0000, 257.0000, 258.4000,
                             259.8000, 260.8000, 262.0000, 263.0000, 264.2000, 265.6000, 266.8000, 267.8000, 269.0000, 270.0000, 271.2000, 272.4000, 273.2000, 274.0000, 275.0000,
                             275.8000, 276.8000, 277.8000, 278.4000, 279.2000, 280.0000, 281.0000, 281.8000, 282.8000, 283.8000, 284.4000, 285.2000, 286.0000, 287.0000, 287.8000,
                             289.0000, 290.2000, 291.8000, 293.0000, 294.2000, 295.8000, 296.8000, 298.0000, 299.6000, 300.8000, 302.0000, 303.6000, 304.8000, 305.8000, 306.6000,
                             307.4000, 308.4000, 309.2000, 310.2000, 311.0000, 312.0000, 313.0000, 314.0000, 315.0000, 315.8000, 316.8000, 317.8000, 318.8000, 319.8000, 320.8000,
                             321.8000, 322.8000, 323.8000, 325.0000, 326.0000, 327.0000, 328.0000, 329.2000, 330.4000, 331.6000, 332.6000, 333.8000, 334.8000, 335.8000, 336.8000,
                             337.8000, 339.0000, 340.0000, 341.0000, 342.0000, 343.0000, 344.0000, 345.0000, 346.0000, 347.0000, 348.2000, 349.2000, 350.4000, 351.4000, 352.4000,
                             353.4000, 354.4000, 355.4000, 356.4000, 357.4000, 358.4000, 359.6000, 360.6000, 361.6000, 362.6000, 363.6000, 364.6000, 365.6000, 366.6000, 367.6000,
                             368.6000, 369.8000, 371.0000, 372.0000, 373.6000, 374.8000, 376.0000, 377.0000, 378.4000, 379.8000, 380.8000, 382.0000, 383.2000, 384.6000, 385.4000,
                             386.4000, 387.2000, 388.2000, 389.2000, 390.0000, 391.0000, 392.0000, 393.0000, 394.0000, 395.0000, 396.0000, 397.0000, 397.8000, 398.8000, 399.8000,
                             400.8000, 401.8000, 402.8000, 404.0000, 405.0000, 406.0000, 407.0000, 408.0000, 409.0000, 410.0000, 411.2000, 412.2000, 413.4000, 414.4000, 415.6000,
                             416.6000, 417.6000, 418.6000, 419.6000, 420.8000, 421.8000, 422.8000, 423.8000, 424.8000, 425.8000, 426.8000, 427.8000, 428.8000, 429.8000, 430.8000,
                             431.8000, 432.8000, 433.8000, 434.8000, 436.0000, 437.0000, 438.0000, 439.0000, 440.2000, 441.4000, 442.6000, 443.8000, 444.8000, 445.8000, 446.8000,
                             448.0000, 449.0000, 450.2000, 451.6000, 452.8000, 454.0000, 455.0000, 456.4000, 457.8000, 458.8000, 460.0000, 461.2000, 462.6000, 463.8000, 464.8000,
                             465.8000, 466.8000, 467.8000, 468.6000, 469.4000, 470.4000, 471.2000, 472.2000, 473.0000, 474.0000, 475.0000, 476.0000, 477.0000, 477.8000, 478.8000,
                             479.8000, 480.8000, 481.8000, 483.0000, 484.0000, 485.0000, 486.2000, 487.4000, 488.8000, 489.8000, 490.8000, 491.8000, 493.0000, 494.0000, 495.0000,
                             496.2000, 497.0000, 497.8000, 498.8000, 499.4000, 500.0000, 501.0000, 501.8000, 502.8000, 503.4000, 504.0000, 505.0000, 505.8000, 506.6000, 507.2000,
                             508.0000, 508.8000, 509.8000, 510.4000, 511.0000, 512.0000, 513.0000, 514.0000, 515.0000, 516.0000, 517.0000, 518.0000, 519.0000, 520.0000, 521.0000,
                             522.0000, 523.0000, 524.0000, 525.0000, 526.0000, 527.0000, 528.0000, 529.0000, 530.0000, 531.4000, 532.6000, 533.8000, 534.8000, 536.0000, 537.0000,
                             538.2000, 539.4000, 540.8000, 541.8000, 542.8000, 544.0000, 545.0000, 545.8000, 546.8000, 547.8000, 548.6000, 549.2000, 550.0000, 551.0000, 552.0000,
                             552.8000, 553.8000, 554.8000, 555.6000, 556.2000, 557.0000, 558.0000, 559.0000, 559.8000, 561.0000, 562.0000, 563.4000, 564.8000, 565.8000, 567.0000,
                             568.2000, 569.6000, 570.8000, 572.0000, 573.0000, 574.4000, 575.8000, 576.8000, 578.0000, 579.0000, 580.2000, 581.6000, 582.8000, 583.8000, 585.0000,
                             586.0000, 587.2000, 588.4000, 589.8000, 590.8000, 592.0000, 593.0000, 593.8000, 594.8000, 595.8000, 596.8000, 597.8000, 598.8000, 599.8000, 600.8000,
                             601.6000, 602.6000, 603.4000, 604.4000, 605.2000, 606.2000, 607.2000, 608.0000, 609.0000, 610.0000, 611.0000, 611.8000, 612.8000, 613.8000, 614.8000,
                             615.6000, 616.4000, 617.2000, 618.0000, 619.0000, 620.0000, 621.0000, 621.8000, 622.8000, 623.8000, 625.0000, 626.8000, 628.6000, 630.2000, 632.0000,
                             633.8000, 635.6000, 637.2000, 639.0000, 640.6000, 641.0000, 642.0000, 642.8000, 643.6000, 644.2000, 645.0000, 645.8000, 646.8000, 647.2000, 648.0000,
                             648.8000, 649.8000, 650.4000, 651.0000, 651.8000, 652.8000, 653.4000, 654.0000, 655.0000, 655.8000, 656.6000, 657.8000, 658.8000, 659.8000, 660.8000,
                             661.8000, 663.0000, 664.0000, 665.0000, 666.0000, 667.0000, 668.0000, 669.2000, 670.2000, 671.4000, 672.4000, 673.4000, 674.2000, 675.0000, 676.0000,
                             677.0000, 678.0000, 679.0000, 679.8000, 680.8000, 681.8000, 682.8000, 683.6000, 684.6000, 685.4000, 686.2000, 687.0000, 688.0000, 689.4000, 690.8000,
                             692.0000, 693.0000, 694.4000, 695.8000, 697.0000, 698.0000, 699.4000, 700.8000, 702.0000, 703.0000, 704.4000, 705.8000, 706.8000, 707.8000, 709.0000,
                             710.0000, 711.0000, 712.4000, 713.6000, 714.8000, 715.8000, 717.0000, 718.0000, 719.0000, 720.2000, 721.2000, 722.2000, 723.2000, 724.0000, 725.0000,
                             726.0000, 727.0000, 728.0000, 729.0000, 730.0000, 731.0000, 732.0000, 733.0000, 734.0000, 735.0000, 736.0000, 736.8000, 737.8000, 738.8000, 739.4000,
                             740.2000, 741.0000, 742.0000, 743.0000, 743.8000, 744.8000, 745.8000, 746.4000, 747.2000, 748.0000, 749.0000, 750.0000, 750.8000, 751.8000, 753.0000,
                             755.8000, 758.2000, 760.8000, 763.2000, 765.8000, 768.2000, 769.4000, 770.8000, 771.8000, 772.8000, 774.0000, 775.0000, 776.2000, 777.6000, 778.8000,
                             779.8000, 781.0000, 782.0000, 783.2000, 784.4000, 785.2000, 786.0000, 787.0000, 788.0000, 789.0000, 789.8000, 790.8000, 791.8000, 792.8000, 793.6000,
                             794.4000, 795.2000, 796.0000, 797.0000, 798.0000, 799.0000, 799.8000, 800.8000, 802.0000, 803.0000, 804.0000, 805.0000, 806.0000, 807.0000, 808.0000,
                             809.2000, 810.2000, 811.4000, 812.4000, 813.6000, 814.6000, 815.8000, 816.8000, 817.8000, 818.8000, 820.0000, 821.0000, 822.0000, 823.2000, 824.4000,
                             825.6000, 826.8000, 827.8000, 828.8000, 830.0000, 831.0000, 832.0000, 833.0000, 834.4000, 835.6000, 836.8000, 837.8000, 839.0000, 840.0000, 841.0000,
                             842.2000, 843.4000, 844.8000, 845.8000, 846.8000, 848.0000, 849.0000, 849.8000, 850.8000, 851.8000, 852.6000, 853.4000, 854.2000, 855.0000, 856.0000,
                             857.0000, 858.0000, 858.8000, 859.8000, 860.8000, 861.8000, 862.6000, 863.4000, 864.2000, 865.6000, 866.8000, 867.8000, 869.0000, 870.0000, 871.4000,
                             872.8000, 873.8000, 875.0000, 876.0000, 877.4000, 878.8000, 879.8000, 881.0000, 882.2000, 883.6000, 884.8000, 886.0000, 887.0000, 888.4000, 889.8000,
                             891.0000, 892.0000, 893.4000, 894.8000, 895.8000, 897.0000, 897.8000, 898.8000, 899.8000, 900.8000, 901.8000, 902.8000, 903.8000, 904.8000, 905.8000,
                             906.8000, 907.6000, 908.6000, 909.6000, 910.4000, 911.4000, 912.4000, 913.4000, 914.4000, 915.6000, 916.6000, 917.6000, 918.6000, 919.6000, 920.8000,
                             921.8000, 922.8000, 923.8000, 924.8000, 925.8000, 926.8000, 927.8000, 928.8000, 930.0000, 931.0000, 932.0000, 933.2000, 934.4000, 935.6000, 936.8000,
                             937.8000, 938.8000, 940.0000, 941.0000, 942.0000, 943.4000, 944.6000, 945.6000, 946.6000, 947.6000, 948.6000, 949.8000, 950.8000, 951.8000, 952.8000,
                             953.8000, 954.8000, 955.8000, 956.8000, 957.8000, 958.8000, 959.8000, 960.8000, 961.8000, 963.0000, 964.0000, 965.0000, 966.0000, 967.0000, 968.2000,
                             969.2000, 970.4000, 971.6000, 972.8000, 973.8000, 974.8000, 975.8000, 976.8000, 977.8000, 978.6000, 979.4000, 980.2000, 981.0000, 982.0000, 983.0000,
                             984.0000, 984.8000, 985.8000, 986.8000, 987.6000, 988.4000, 989.2000, 990.0000, 991.0000, 992.0000, 993.0000, 994.0000, 995.2000, 996.4000, 997.6000,
                             998.8000, 999.8000, 1024.0000, 1025.0000, 1019.2000, 1027.0000, 1005.4000, 1006.6000, 1009.4000, 1031.0000, 1032.0000, 1033.0000, 1034.0000, 1035.0000, 1036.2000,
                             1037.2000, 1038.2000, 1039.2000, 1040.2000, 1041.0000, 1042.0000, 1043.0000, 1044.0000, 1045.0000, 1045.8000, 1046.8000, 1047.8000, 1048.8000, 1049.8000, 1050.6000,
                             1051.6000, 1052.4000, 1053.2000, 1054.2000, 1055.0000, 1056.0000, 1057.2000, 1058.4000, 1059.8000, 1060.8000, 1062.0000, 1063.0000, 1064.0000, 1065.4000, 1066.6000,
                             1067.8000, 1068.8000, 1070.0000, 1071.0000, 1072.2000, 1073.4000, 1074.6000, 1075.8000, 1076.8000, 1077.8000, 1078.8000, 1080.0000, 1081.0000, 1082.0000, 1083.0000,
                             1084.2000, 1085.2000, 1086.4000, 1087.6000, 1088.8000, 1089.8000, 1091.0000, 1092.0000, 1093.0000, 1094.2000, 1095.6000, 1096.8000, 1097.8000, 1099.0000, 1100.0000,
                             1101.0000, 1102.4000, 1103.6000, 1104.6000, 1105.4000, 1106.2000, 1107.0000, 1108.0000, 1109.0000, 1109.8000, 1110.8000, 1111.8000, 1112.4000, 1113.2000, 1114.0000,
                             1115.0000, 1116.0000, 1116.8000, 1117.8000, 1118.8000, 1119.4000, 1120.2000, 1121.6000, 1122.8000, 1123.8000, 1124.8000, 1126.0000, 1127.0000, 1128.0000, 1129.0000,
                             1130.2000, 1131.6000, 1132.8000, 1133.8000, 1134.8000, 1136.0000, 1137.0000, 1138.6000, 1139.8000, 1141.0000, 1142.6000, 1143.8000, 1145.0000, 1146.8000, 1147.8000,
                             1149.0000, 1150.8000, 1152.0000, 1153.0000, 1153.8000, 1154.8000, 1155.8000, 1156.8000, 1157.8000, 1158.8000, 1159.8000, 1160.6000, 1161.4000, 1162.4000, 1163.2000,
                             1164.2000, 1165.0000, 1166.0000, 1167.0000, 1168.0000, 1169.0000, 1170.0000, 1171.0000, 1172.2000, 1173.4000, 1174.4000, 1175.6000, 1176.8000, 1177.8000, 1178.8000,
                             1179.8000, 1180.8000, 1182.0000, 1183.0000, 1184.0000, 1185.0000, 1186.0000, 1186.8000, 1187.8000, 1188.8000, 1189.8000, 1190.8000, 1191.8000, 1192.6000, 1193.6000,
                             1194.4000, 1195.2000, 1196.2000, 1197.0000, 1198.0000, 1199.0000, 1200.0000, 1200.8000, 1201.8000, 1202.8000, 1203.4000, 1204.2000, 1205.0000, 1206.0000, 1206.8000,
                             1207.8000, 1208.6000, 1209.2000, 1210.0000, 1211.0000, 1211.8000, 1212.8000, 1213.6000, 1214.4000, 1215.0000, 1216.0000, 1217.0000, 1218.2000, 1219.4000, 1220.6000,
                             1221.8000, 1222.8000, 1223.8000, 1225.0000, 1226.0000, 1227.0000, 1228.4000, 1229.6000, 1230.8000, 1231.8000, 1232.8000, 1233.8000, 1234.6000, 1235.4000, 1236.4000,
                             1237.2000, 1238.0000, 1239.0000, 1240.0000, 1240.8000, 1241.8000, 1242.8000, 1243.8000, 1244.6000, 1245.4000, 1246.4000, 1247.2000, 1248.0000, 1249.0000, 1250.0000,
                             1251.0000, 1252.0000, 1253.0000, 1254.0000, 1255.0000, 1256.0000, 1257.0000, 1258.0000, 1259.0000, 1260.0000, 1261.0000, 1262.0000, 1263.0000, 1264.0000, 1265.8000,
                             1267.8000, 1269.8000, 1271.8000, 1274.0000, 1276.0000, 1278.0000, 1280.0000, 1281.2000, 1282.4000, 1283.8000, 1284.8000, 1285.8000, 1287.0000, 1288.0000, 1289.0000,
                             1290.2000, 1291.6000, 1292.8000, 1293.8000, 1294.8000, 1296.0000, 1297.0000, 1298.0000, 1299.0000, 1300.0000, 1301.0000, 1302.0000, 1303.0000, 1304.0000, 1305.0000,
                             1306.0000, 1307.0000, 1308.0000, 1308.8000, 1309.8000, 1310.8000, 1311.8000, 1312.8000, 1313.8000, 1314.8000, 1315.8000, 1316.6000, 1317.4000, 1318.4000, 1319.2000,
                             1320.0000, 1321.0000, 1322.0000, 1323.0000, 1324.0000, 1324.8000, 1325.8000, 1326.8000, 1327.8000, 1328.8000, 1329.8000, 1330.8000, 1331.8000, 1332.8000, 1333.8000,
                             1334.8000, 1335.8000, 1336.8000, 1337.8000, 1338.8000, 1339.8000, 1340.8000, 1342.0000, 1343.0000, 1344.0000, 1345.0000, 1346.0000, 1347.0000, 1348.0000, 1349.0000,
                             1350.2000, 1351.2000, 1352.4000, 1353.6000, 1354.6000, 1355.8000, 1356.8000, 1357.8000, 1358.8000, 1359.8000, 1361.0000, 1362.0000, 1363.0000, 1364.4000, 1365.6000,
                             1366.8000, 1367.8000, 1369.0000, 1370.0000, 1371.2000, 1372.6000, 1373.8000, 1374.8000, 1376.0000, 1376.8000, 1377.8000, 1378.8000, 1379.8000, 1380.6000, 1381.4000,
                             1382.2000, 1383.0000, 1384.0000, 1385.0000, 1385.8000, 1386.8000, 1387.8000, 1388.8000, 1389.6000, 1390.4000, 1391.2000, 1392.0000, 1393.6000, 1394.8000, 1396.0000,
                             1397.2000, 1398.8000, 1399.8000, 1401.0000, 1402.4000, 1403.8000, 1405.0000, 1406.2000, 1407.6000, 1408.8000, 1409.8000, 1411.0000, 1412.0000, 1413.0000, 1414.4000,
                             1415.6000, 1416.8000, 1417.8000, 1418.8000, 1420.0000, 1421.0000, 1422.0000, 1423.2000, 1424.4000, 1425.2000, 1426.0000, 1427.0000, 1428.0000, 1429.0000, 1429.8000,
                             1430.8000, 1431.8000, 1432.6000, 1433.4000, 1434.2000, 1435.0000, 1436.0000, 1437.0000, 1438.0000, 1438.8000, 1439.8000, 1440.8000, 1441.8000, 1442.8000, 1443.6000,
                             1444.6000, 1445.4000, 1446.4000, 1447.2000, 1448.2000, 1449.0000, 1450.0000, 1451.0000, 1452.0000, 1453.0000, 1454.0000, 1454.8000, 1455.8000, 1457.0000, 1458.6000,
                             1460.0000, 1461.6000, 1463.0000, 1464.4000, 1465.8000, 1467.2000, 1468.8000, 1470.0000, 1471.8000, 1472.8000, 1473.8000, 1474.8000, 1475.8000, 1476.8000, 1477.8000,
                             1478.8000, 1479.8000, 1480.8000, 1481.8000, 1482.8000, 1483.8000, 1484.8000, 1485.8000, 1486.8000, 1487.8000, 1488.8000, 1489.8000, 1490.8000, 1491.8000, 1492.8000,
                             1493.8000, 1494.8000, 1496.0000, 1497.0000, 1498.0000, 1499.0000, 1500.0000, 1501.0000, 1502.0000, 1503.0000, 1504.0000, 1505.0000, 1506.0000, 1506.8000, 1507.8000,
                             1508.8000, 1509.8000, 1510.4000, 1511.2000, 1512.0000, 1513.0000, 1514.0000, 1514.8000, 1515.8000, 1516.8000, 1517.6000, 1518.4000, 1519.2000, 1520.0000, 1521.0000,
                             1522.0000, 1522.8000, 1523.8000, 1524.8000, 1525.6000, 1526.4000, 1527.2000, 1528.0000, 1529.0000, 1530.0000, 1530.8000, 1531.8000, 1532.8000, 1533.6000, 1534.4000,
                             1535.2000, 1536.0000, 1537.0000, 1538.0000, 1539.0000, 1540.0000, 1541.0000, 1541.8000, 1542.8000, 1543.8000, 1544.8000, 1545.8000, 1546.8000, 1547.8000, 1548.8000,
                             1549.6000, 1550.6000, 1551.6000, 1552.4000, 1553.2000, 1554.0000, 1555.0000, 1556.0000, 1556.8000, 1557.8000, 1558.8000, 1559.6000, 1560.2000, 1561.0000, 1562.0000,
                             1563.0000, 1563.8000, 1564.8000, 1565.8000, 1566.6000, 1567.4000, 1568.2000, 1569.6000, 1570.8000, 1571.8000, 1573.0000, 1574.0000, 1575.4000, 1576.8000, 1577.8000,
                             1579.0000, 1580.0000, 1581.2000, 1582.6000, 1583.8000, 1585.0000, 1586.2000, 1587.8000, 1588.8000, 1590.0000, 1591.6000, 1592.8000, 1594.0000, 1595.4000, 1596.8000,
                             1598.0000, 1599.2000, 1600.6000, 1601.2000, 1602.0000, 1603.0000, 1604.0000, 1604.8000, 1605.8000, 1606.8000, 1607.4000, 1608.2000, 1609.0000, 1610.0000, 1611.0000,
                             1611.8000, 1612.8000, 1613.6000, 1614.4000, 1615.2000, 1616.0000, 1617.0000, 1618.0000, 1619.0000, 1620.0000, 1621.2000, 1622.2000, 1623.2000, 1624.2000, 1625.4000,
                             1626.4000, 1627.4000, 1628.4000, 1629.4000, 1630.6000, 1631.6000, 1632.6000, 1633.6000, 1634.4000, 1635.4000, 1636.4000, 1637.4000, 1638.2000, 1639.2000, 1640.2000,
                             1641.0000, 1642.0000, 1643.0000, 1644.0000, 1645.0000, 1646.0000, 1647.0000, 1648.0000, 1649.6000, 1651.0000, 1652.4000, 1654.0000, 1655.4000, 1657.0000, 1658.4000,
                             1660.0000, 1661.4000, 1663.0000, 1664.2000, 1665.2000, 1666.2000, 1667.2000, 1668.2000, 1669.0000, 1670.0000, 1671.0000, 1672.0000, 1673.0000, 1674.0000, 1675.0000,
                             1676.0000, 1677.0000, 1678.0000, 1679.0000, 1680.0000, 1681.0000, 1682.0000, 1683.0000, 1684.0000, 1685.0000, 1686.0000, 1687.0000, 1688.2000, 1689.2000, 1690.2000,
                             1691.2000, 1692.4000, 1693.4000, 1694.4000, 1695.4000, 1696.6000, 1697.6000, 1698.6000, 1699.8000, 1700.8000, 1701.8000, 1702.8000, 1703.8000, 1704.8000, 1705.8000,
                             1706.8000, 1707.8000, 1708.8000, 1710.0000, 1711.0000, 1712.0000, 1713.0000, 1714.0000, 1715.0000, 1716.2000, 1717.4000, 1718.6000, 1719.8000, 1720.8000, 1721.8000,
                             1722.8000, 1724.0000, 1725.0000, 1726.0000, 1727.0000, 1728.2000, 1729.2000, 1730.0000, 1731.0000, 1732.0000, 1733.0000, 1734.0000, 1735.0000, 1736.0000, 1737.0000,
                             1738.0000, 1739.0000, 1740.0000, 1741.0000, 1742.0000, 1742.8000, 1743.8000, 1744.8000, 1745.6000, 1746.2000, 1747.0000, 1747.8000, 1748.8000, 1749.4000, 1750.0000,
                             1751.0000, 1751.8000, 1752.8000, 1753.4000, 1754.0000, 1755.0000, 1755.8000, 1756.6000, 1757.2000, 1758.0000, 1758.8000, 1759.8000, 1760.6000, 1761.4000, 1762.2000,
                             1763.2000, 1764.0000, 1765.0000, 1766.0000, 1767.0000, 1767.8000, 1768.8000, 1769.8000, 1770.8000, 1771.8000, 1772.6000, 1773.4000, 1774.2000, 1775.0000, 1776.0000,
                             1778.4000, 1780.8000, 1783.0000, 1785.0000, 1787.6000, 1789.8000, 1792.0000, 1793.0000, 1794.0000, 1795.2000, 1796.2000, 1797.4000, 1798.4000, 1799.6000, 1800.6000,
                             1801.6000, 1802.8000, 1803.8000, 1804.8000, 1805.8000, 1806.8000, 1807.8000, 1808.8000, 1809.8000, 1810.8000, 1811.8000, 1812.8000, 1813.8000, 1814.8000, 1815.8000,
                             1816.8000, 1817.8000, 1818.8000, 1819.8000, 1820.8000, 1821.8000, 1822.8000, 1823.8000, 1824.8000, 1825.8000, 1826.8000, 1827.8000, 1828.8000, 1829.8000, 1831.0000,
                             1832.0000, 1833.0000, 1834.0000, 1835.0000, 1836.0000, 1837.2000, 1838.2000, 1839.4000, 1840.4000, 1841.4000, 1842.2000, 1843.2000, 1844.2000, 1845.0000, 1846.0000,
                             1847.0000, 1848.0000, 1849.0000, 1850.0000, 1851.0000, 1852.0000, 1853.0000, 1854.0000, 1855.0000, 1855.8000, 1857.0000, 1858.0000, 1859.2000, 1860.4000, 1861.8000,
                             1862.8000, 1863.8000, 1865.0000, 1866.0000, 1867.2000, 1868.4000, 1869.8000, 1870.8000, 1871.8000, 1873.0000, 1874.0000, 1875.0000, 1876.0000, 1877.0000, 1878.2000,
                             1879.2000, 1880.4000, 1881.6000, 1882.6000, 1883.8000, 1884.8000, 1885.8000, 1886.8000, 1887.8000, 1888.8000, 1889.8000, 1890.8000, 1891.8000, 1892.8000, 1893.8000,
                             1894.8000, 1895.8000, 1896.8000, 1897.8000, 1898.8000, 1899.8000, 1900.8000, 1901.8000, 1902.8000, 1903.8000, 1904.8000, 1906.0000, 1907.0000, 1908.2000, 1909.4000,
                             1910.8000, 1911.8000, 1912.8000, 1914.0000, 1915.0000, 1916.2000, 1917.6000, 1918.8000, 1919.8000, 1921.0000, 1922.0000, 1923.2000, 1924.4000, 1925.8000, 1926.8000,
                             1928.0000, 1929.0000, 1930.2000, 1931.4000, 1932.8000, 1933.8000, 1935.0000, 1936.0000, 1937.0000, 1938.0000, 1939.0000, 1940.0000, 1941.0000, 1942.0000, 1943.0000,
                             1944.0000, 1945.0000, 1946.0000, 1947.0000, 1948.0000, 1949.0000, 1950.0000, 1951.0000, 1952.0000, 1953.2000, 1954.4000, 1955.6000, 1956.8000, 1957.8000, 1959.0000,
                             1960.0000, 1961.0000, 1962.2000, 1963.6000, 1964.8000, 1965.8000, 1966.8000, 1968.0000, 1969.0000, 1969.8000, 1970.8000, 1971.8000, 1972.8000, 1973.8000, 1974.6000,
                             1975.4000, 1976.4000, 1977.2000, 1978.0000, 1979.0000, 1980.0000, 1981.0000, 1982.0000, 1982.8000, 1983.8000, 1984.8000, 1986.0000, 1987.0000, 1988.2000, 1989.6000,
                             1990.8000, 1991.8000, 1993.0000, 1994.0000, 1995.4000, 1996.8000, 1997.8000, 1999.0000, 2000.0000, 2001.0000, 2002.0000, 2003.0000, 2004.0000, 2005.0000, 2006.0000,
                             2007.2000, 2008.2000, 2009.2000, 2010.2000, 2011.2000, 2012.4000, 2013.4000, 2014.4000, 2015.4000, 2016.6000, 2017.6000, 2018.6000, 2019.6000, 2020.6000, 2021.6000,
                             2022.8000, 2023.8000, 2024.8000, 2025.8000, 2026.8000, 2027.8000, 2028.8000, 2029.8000, 2030.8000, 2031.8000, 2033.8000, 2036.8000, 2039.6000, 2042.4000, 2045.0000,
                             2048.0000, 2049.0000, 2050.0000, 2051.0000, 2052.0000, 2053.0000, 2054.0000, 2055.0000, 2056.0000, 2057.0000, 2058.0000, 2059.0000, 2060.0000, 2061.0000, 2062.0000,
                             2063.2000, 2064.2000, 2065.0000, 2066.0000, 2067.0000, 2068.0000, 2069.0000, 2070.0000, 2071.0000, 2072.0000, 2073.0000, 2074.0000, 2074.8000, 2075.8000, 2076.8000,
                             2077.8000, 2078.8000, 2079.8000, 2080.8000, 2081.8000, 2083.0000, 2084.0000, 2085.0000, 2086.0000, 2087.2000, 2088.3999, 2089.3999, 2090.6001, 2091.8000, 2092.8000,
                             2093.8000, 2094.8000, 2096.0000, 2097.0000, 2098.0000, 2099.0000, 2100.2000, 2101.2000, 2102.3999, 2103.6001, 2104.6001, 2105.8000, 2106.8000, 2107.8000, 2108.8000,
                             2109.8000, 2111.0000, 2112.0000, 2113.0000, 2113.8000, 2114.8000, 2115.8000, 2116.6001, 2117.3999, 2118.2000, 2119.0000, 2120.0000, 2121.0000, 2121.8000, 2122.8000,
                             2123.8000, 2124.6001, 2125.3999, 2126.2000, 2127.0000, 2128.0000, 2129.0000, 2130.3999, 2131.6001, 2132.8000, 2133.8000, 2135.0000, 2136.0000, 2137.2000, 2138.3999,
                             2139.8000, 2140.8000, 2141.8000, 2143.0000, 2144.0000, 2145.0000, 2146.0000, 2147.2000, 2148.2000, 2149.2000, 2150.3999, 2151.3999, 2152.3999, 2153.3999, 2154.6001,
                             2155.6001, 2156.6001, 2157.6001, 2158.8000, 2159.8000, 2160.8000, 2162.0000, 2163.2000, 2164.6001, 2165.8000, 2167.0000, 2168.2000, 2169.8000, 2170.8000, 2172.0000,
                             2173.3999, 2174.8000, 2176.0000, 2177.0000, 2178.0000, 2179.0000, 2180.0000, 2181.0000, 2182.0000, 2183.0000, 2184.0000, 2185.0000, 2186.0000, 2187.0000, 2188.0000,
                             2189.0000, 2190.0000, 2191.0000, 2192.0000, 2193.0000, 2194.0000, 2195.0000, 2196.0000, 2197.0000, 2198.0000, 2199.0000, 2200.0000, 2201.0000, 2202.0000, 2203.0000,
                             2204.0000, 2205.0000, 2206.0000, 2207.0000, 2208.0000, 2209.0000, 2210.0000, 2211.0000, 2212.2000, 2213.3999, 2214.3999, 2215.6001, 2216.6001, 2217.8000, 2218.8000,
                             2219.8000, 2220.8000, 2221.8000, 2223.0000, 2224.0000, 2225.0000, 2226.0000, 2227.0000, 2228.2000, 2229.3999, 2230.6001, 2231.8000, 2232.8000, 2233.8000, 2234.8000,
                             2236.0000, 2237.0000, 2238.0000, 2239.0000, 2240.2000, 2241.2000, 2242.0000, 2243.0000, 2244.0000, 2245.0000, 2246.0000, 2247.0000, 2248.0000, 2249.0000, 2250.0000,
                             2251.0000, 2252.0000, 2253.0000, 2254.0000, 2255.0000, 2256.0000, 2257.0000, 2258.0000, 2259.0000, 2260.2000, 2261.2000, 2262.2000, 2263.3999, 2264.3999, 2265.6001,
                             2266.6001, 2267.6001, 2268.8000, 2269.8000, 2270.8000, 2271.8000, 2272.8000, 2273.8000, 2274.8000, 2275.8000, 2276.8000, 2277.8000, 2278.6001, 2279.6001, 2280.6001,
                             2281.6001, 2282.3999, 2283.3999, 2284.3999, 2285.2000, 2286.2000, 2287.2000, 2288.2000, 2289.8000, 2291.0000, 2292.3999, 2293.8000, 2295.0000, 2296.8000, 2298.0000,
                             2299.3999, 2300.8000, 2302.0000, 2303.6001, 2304.8000, 2306.0000, 2307.2000, 2308.8000, 2309.8000, 2311.0000, 2312.2000, 2313.8000, 2314.8000, 2316.0000, 2317.2000,
                             2318.8000, 2319.8000, 2320.8000, 2321.8000, 2322.3999, 2323.2000, 2324.0000, 2325.0000, 2325.8000, 2326.8000, 2327.3999, 2328.2000, 2329.0000, 2330.0000, 2330.8000,
                             2331.8000, 2332.3999, 2333.2000, 2334.0000, 2335.0000, 2335.8000, 2336.8000, 2337.8000, 2338.8000, 2339.8000, 2340.8000, 2341.8000, 2342.8000, 2343.8000, 2344.8000,
                             2345.8000, 2346.8000, 2347.8000, 2348.8000, 2349.8000, 2351.0000, 2352.0000, 2353.0000, 2354.8000, 2356.0000, 2357.6001, 2359.0000, 2360.3999, 2361.8000, 2363.2000,
                             2364.8000, 2366.0000, 2367.6001, 2368.8000, 2369.8000, 2370.8000, 2371.8000, 2372.8000, 2373.8000, 2374.8000, 2375.8000, 2376.8000, 2377.8000, 2378.6001, 2379.6001,
                             2380.6001, 2381.6001, 2382.6001, 2383.6001, 2384.3999, 2385.3999, 2386.3999, 2387.3999, 2388.3999, 2389.2000, 2390.2000, 2391.2000, 2392.2000, 2393.2000, 2394.0000,
                             2395.0000, 2396.0000, 2397.0000, 2398.0000, 2399.0000, 2400.0000, 2401.0000, 2402.0000, 2403.0000, 2404.0000, 2405.0000, 2406.0000, 2407.0000, 2408.0000, 2409.0000,
                             2410.0000, 2411.0000, 2412.0000, 2413.0000, 2414.0000, 2415.0000, 2416.0000, 2417.0000, 2418.3999, 2419.8000, 2421.0000, 2422.2000, 2423.8000, 2425.0000, 2426.0000,
                             2427.6001, 2428.8000, 2430.0000, 2431.3999, 2432.8000, 2433.8000, 2435.0000, 2436.0000, 2437.2000, 2438.3999, 2439.8000, 2440.8000, 2441.8000, 2443.0000, 2444.0000,
                             2445.2000, 2446.6001, 2447.8000, 2448.8000, 2449.8000, 2450.8000, 2451.6001, 2452.3999, 2453.3999, 2454.2000, 2455.2000, 2456.0000, 2457.0000, 2458.0000, 2459.0000,
                             2460.0000, 2461.0000, 2461.8000, 2462.8000, 2463.8000, 2464.8000, 2466.0000, 2467.0000, 2468.0000, 2469.2000, 2470.3999, 2471.6001, 2472.8000, 2473.8000, 2475.0000,
                             2476.0000, 2477.0000, 2478.2000, 2479.3999, 2480.6001, 2481.8000, 2482.8000, 2483.8000, 2484.8000, 2486.0000, 2487.0000, 2488.0000, 2489.0000, 2490.2000, 2491.3999,
                             2492.6001, 2493.8000, 2494.8000, 2495.8000, 2496.8000, 2497.8000, 2498.8000, 2499.8000, 2501.0000, 2502.0000, 2503.0000, 2504.0000, 2505.0000, 2506.0000, 2507.0000,
                             2508.0000, 2509.0000, 2510.0000, 2511.0000, 2512.0000, 2513.0000, 2514.0000, 2514.8000, 2515.8000, 2516.8000, 2517.8000, 2518.6001, 2519.3999, 2520.2000, 2521.0000,
                             2522.0000, 2523.0000, 2524.0000, 2524.8000, 2525.8000, 2526.8000, 2527.8000, 2528.6001, 2529.8000, 2530.8000, 2531.8000, 2532.8000, 2533.8000, 2535.0000, 2536.0000,
                             2537.0000, 2538.0000, 2539.2000, 2540.2000, 2541.3999, 2542.6001, 2543.6001, 2544.8000, 2545.6001, 2546.3999, 2547.2000, 2548.0000, 2549.0000, 2550.0000, 2551.0000,
                             2551.8000, 2552.8000, 2553.8000, 2554.8000, 2555.6001, 2556.3999, 2557.2000, 2558.0000, 2559.0000, 2560.0000, 2561.0000, 2562.0000, 2563.0000, 2564.0000, 2565.0000,
                             2566.0000, 2567.0000, 2568.0000, 2569.0000, 2570.0000, 2571.0000, 2572.0000, 2573.0000, 2574.0000, 2575.0000, 2576.0000, 2577.0000, 2578.0000, 2579.0000, 2579.8000,
                             2580.8000, 2581.8000, 2582.8000, 2583.8000, 2584.8000, 2585.8000, 2586.8000, 2587.8000, 2588.8000, 2589.8000, 2590.8000, 2591.8000, 2592.8000, 2593.8000, 2594.8000,
                             2595.8000, 2596.8000, 2597.6001, 2598.6001, 2599.6001, 2600.6001, 2601.6001, 2602.3999, 2603.3999, 2604.3999, 2605.3999, 2606.3999, 2607.3999, 2608.3999, 2609.6001,
                             2610.8000, 2611.8000, 2613.0000, 2614.0000, 2615.2000, 2616.3999, 2617.8000, 2618.8000, 2620.0000, 2621.0000, 2622.0000, 2623.3999, 2624.6001, 2625.6001, 2626.6001,
                             2627.6001, 2628.6001, 2629.6001, 2630.6001, 2631.6001, 2632.6001, 2633.6001, 2634.8000, 2635.8000, 2636.8000, 2637.8000, 2638.8000, 2639.8000, 2640.8000, 2641.6001,
                             2642.6001, 2643.3999, 2644.3999, 2645.3999, 2646.2000, 2647.2000, 2648.0000, 2649.0000, 2650.0000, 2651.0000, 2652.0000, 2653.0000, 2654.0000, 2655.0000, 2656.0000,
                             2657.0000, 2658.0000, 2659.0000, 2660.0000, 2661.2000, 2662.3999, 2663.6001, 2664.8000, 2665.8000, 2666.8000, 2667.8000, 2669.0000, 2670.0000, 2671.0000, 2672.0000,
                             2673.6001, 2674.8000, 2676.0000, 2677.2000, 2678.6001, 2679.8000, 2681.0000, 2682.2000, 2683.6001, 2684.8000, 2686.0000, 2687.2000, 2688.6001, 2689.8000, 2690.8000,
                             2692.0000, 2693.0000, 2694.0000, 2695.2000, 2696.6001, 2697.8000, 2698.8000, 2699.8000, 2701.0000, 2702.0000, 2703.2000, 2704.3999, 2705.3999, 2706.6001, 2707.6001,
                             2708.8000, 2709.8000, 2710.8000, 2711.8000, 2712.8000, 2713.8000, 2714.8000, 2715.8000, 2717.0000, 2718.0000, 2719.0000, 2720.0000, 2721.0000, 2722.0000, 2723.0000,
                             2724.0000, 2725.0000, 2725.8000, 2726.8000, 2727.8000, 2728.8000, 2729.8000, 2730.8000, 2731.8000, 2732.8000, 2733.8000, 2734.8000, 2735.6001, 2736.8000, 2737.8000,
                             2738.8000, 2740.0000, 2741.0000, 2742.3999, 2743.6001, 2744.8000, 2745.8000, 2747.0000, 2748.0000, 2749.3999, 2750.6001, 2751.8000, 2752.8000, 2753.8000, 2754.8000,
                             2755.8000, 2756.8000, 2757.8000, 2758.8000, 2759.8000, 2760.8000, 2761.8000, 2762.8000, 2763.8000, 2764.8000, 2765.8000, 2766.8000, 2767.8000, 2769.0000, 2770.0000,
                             2771.0000, 2772.2000, 2773.3999, 2774.6001, 2775.8000, 2776.8000, 2777.8000, 2778.8000, 2780.0000, 2781.0000, 2782.0000, 2783.2000, 2784.3999, 2785.0000, 2786.0000,
                             2787.0000, 2787.8000, 2788.8000, 2789.6001, 2790.3999, 2791.0000, 2792.0000, 2793.0000, 2793.8000, 2794.8000, 2795.6001, 2796.3999, 2797.0000, 2798.0000, 2799.0000,
                             2799.8000, 2801.2000, 2803.6001, 2805.8000, 2807.8000, 2809.8000, 2812.0000, 2814.0000, 2816.0000, 2817.2000, 2818.2000, 2819.2000, 2820.3999, 2821.3999, 2822.6001,
                             2823.6001, 2824.8000, 2825.8000, 2826.8000, 2827.8000, 2828.8000, 2829.8000, 2830.8000, 2831.8000, 2832.8000, 2833.6001, 2834.2000, 2835.0000, 2835.8000, 2836.8000,
                             2837.3999, 2838.0000, 2839.0000, 2839.8000, 2840.6001, 2841.2000, 2842.0000, 2842.8000, 2843.8000, 2844.3999, 2845.0000, 2846.0000, 2846.8000, 2847.8000, 2848.3999,
                             2849.2000, 2850.2000, 2851.2000, 2852.2000, 2853.2000, 2854.0000, 2855.0000, 2856.0000, 2857.0000, 2858.0000, 2859.0000, 2860.0000, 2861.0000, 2862.0000, 2863.0000,
                             2864.0000, 2865.0000, 2866.0000, 2867.0000, 2868.0000, 2869.2000, 2870.2000, 2871.3999, 2872.3999, 2873.6001, 2874.6001, 2875.8000, 2876.8000, 2877.8000, 2878.8000,
                             2879.8000, 2880.8000, 2881.8000, 2882.8000, 2883.8000, 2884.8000, 2885.8000, 2886.8000, 2887.8000, 2888.8000, 2889.6001, 2890.6001, 2891.6001, 2892.3999, 2893.3999,
                             2894.3999, 2895.3999, 2896.3999, 2897.8000, 2898.8000, 2900.0000, 2901.0000, 2902.3999, 2903.8000, 2904.8000, 2906.0000, 2907.2000, 2908.6001, 2909.8000, 2911.0000,
                             2912.0000, 2913.0000, 2914.0000, 2914.8000, 2915.8000, 2916.6001, 2917.2000, 2918.0000, 2919.0000, 2920.0000, 2920.8000, 2921.8000, 2922.6001, 2923.3999, 2924.0000,
                             2925.0000, 2926.0000, 2926.8000, 2927.8000, 2928.8000, 2930.0000, 2931.0000, 2932.6001, 2933.8000, 2935.0000, 2936.0000, 2937.3999, 2938.8000, 2940.0000, 2941.0000,
                             2942.3999, 2943.8000, 2944.8000, 2946.0000, 2947.0000, 2948.0000, 2949.0000, 2950.2000, 2951.2000, 2952.3999, 2953.6001, 2954.8000, 2955.8000, 2956.8000, 2957.8000,
                             2959.0000, 2960.0000, 2961.0000, 2962.0000, 2963.0000, 2964.0000, 2965.0000, 2966.0000, 2967.0000, 2967.8000, 2968.8000, 2969.8000, 2970.8000, 2971.8000, 2972.8000,
                             2973.8000, 2974.8000, 2975.8000, 2976.8000, 2977.8000, 2978.8000, 2980.0000, 2981.0000, 2982.0000, 2983.0000, 2984.0000, 2985.0000, 2986.0000, 2987.2000, 2988.2000,
                             2989.3999, 2990.3999, 2991.6001, 2992.6001, 2993.3999, 2994.3999, 2995.2000, 2996.2000, 2997.0000, 2998.0000, 2999.0000, 3000.0000, 3001.0000, 3002.0000, 3003.0000,
                             3003.8000, 3004.8000, 3005.8000, 3006.8000, 3007.8000, 3008.8000, 3009.8000, 3010.8000, 3011.8000, 3012.8000, 3013.8000, 3014.8000, 3016.0000, 3017.0000, 3018.0000,
                             3019.0000, 3020.0000, 3021.0000, 3022.0000, 3023.0000, 3024.0000, 3025.0000, 3026.0000, 3027.0000, 3028.0000, 3029.0000, 3030.0000, 3030.8000, 3031.8000, 3032.8000,
                             3033.8000, 3034.8000, 3035.8000, 3036.8000, 3037.8000, 3038.6001, 3039.6001, 3040.6001, 3041.8000, 3042.8000, 3043.8000, 3044.8000, 3046.0000, 3047.0000, 3048.0000,
                             3049.0000, 3050.2000, 3051.3999, 3076.2000, 3077.0000, 3054.8000, 3057.0000, 3079.8000, 3080.8000, 3081.8000, 3082.6001, 3083.3999, 3084.2000, 3085.0000, 3086.0000,
                             3087.0000, 3087.8000, 3088.8000, 3089.8000, 3091.0000, 3092.0000, 3093.0000, 3094.0000, 3095.0000, 3096.2000, 3097.2000, 3098.3999, 3099.6001, 3100.8000, 3101.8000,
                             3102.8000, 3103.8000, 3104.8000, 3105.8000, 3106.8000, 3107.8000, 3108.6001, 3109.6001, 3110.3999, 3111.3999, 3112.2000, 3113.0000, 3114.0000, 3115.0000, 3116.0000,
                             3117.0000, 3118.0000, 3118.8000, 3119.8000, 3120.8000, 3122.0000, 3123.0000, 3124.0000, 3125.0000, 3126.0000, 3127.2000, 3128.3999, 3129.3999, 3130.6001, 3131.8000,
                             3132.8000, 3133.8000, 3134.8000, 3135.8000, 3136.8000, 3137.8000, 3138.8000, 3139.8000, 3140.8000, 3141.8000, 3142.8000, 3143.8000, 3144.8000, 3145.8000, 3146.8000,
                             3148.0000, 3149.0000, 3150.0000, 3151.0000, 3152.0000, 3152.8000, 3153.8000, 3154.8000, 3155.8000, 3156.8000, 3157.6001, 3158.3999, 3159.3999, 3160.2000, 3161.0000,
                             3162.0000, 3163.0000, 3164.0000, 3165.0000, 3165.8000, 3166.8000, 3167.8000, 3168.8000, 3169.6001, 3170.2000, 3171.0000, 3172.0000, 3173.0000, 3173.8000, 3174.8000,
                             3175.6001, 3176.3999, 3177.0000, 3178.0000, 3179.0000, 3179.8000, 3180.8000, 3181.6001, 3182.3999, 3183.0000, 3184.0000, 3185.3999, 3186.8000, 3188.0000, 3189.6001,
                             3190.8000, 3192.0000, 3193.8000, 3195.0000, 3196.2000, 3197.8000, 3199.0000, 3200.2000, 3201.0000, 3202.0000, 3203.0000, 3204.0000, 3204.8000, 3205.8000, 3206.8000,
                             3207.8000, 3208.6001, 3209.3999, 3210.2000, 3211.0000, 3212.0000, 3213.0000, 3213.8000, 3214.8000, 3215.8000, 3216.8000, 3217.8000, 3218.6001, 3219.6001, 3220.6001,
                             3221.3999, 3222.3999, 3223.3999, 3224.2000, 3225.2000, 3226.2000, 3227.0000, 3228.0000, 3229.0000, 3230.0000, 3231.0000, 3232.0000, 3233.0000, 3234.0000, 3235.0000,
                             3236.0000, 3237.0000, 3237.8000, 3238.8000, 3239.8000, 3240.8000, 3241.8000, 3242.8000, 3243.8000, 3244.8000, 3245.8000, 3246.8000, 3247.8000, 3248.6001, 3249.6001,
                             3250.3999, 3251.3999, 3252.2000, 3253.2000, 3254.0000, 3255.0000, 3256.0000, 3257.0000, 3258.0000, 3259.0000, 3260.0000, 3260.8000, 3261.8000, 3262.8000, 3263.8000,
                             3264.8000, 3265.3999, 3266.2000, 3267.0000, 3268.0000, 3268.8000, 3269.8000, 3270.6001, 3271.3999, 3272.0000, 3273.0000, 3274.0000, 3274.8000, 3275.8000, 3276.3999,
                             3277.2000, 3278.0000, 3279.0000, 3279.8000, 3280.8000, 3281.8000, 3282.8000, 3283.8000, 3284.6001, 3285.6001, 3286.3999, 3287.3999, 3288.2000, 3289.2000, 3290.0000,
                             3291.0000, 3292.0000, 3293.0000, 3294.0000, 3295.0000, 3295.8000, 3296.8000, 3297.8000, 3298.8000, 3299.6001, 3300.3999, 3301.2000, 3302.0000, 3303.0000, 3304.0000,
                             3304.8000, 3305.8000, 3306.8000, 3307.6001, 3308.3999, 3309.2000, 3310.0000, 3311.0000, 3312.0000, 3313.3999, 3315.0000, 3316.3999, 3318.0000, 3319.6001, 3321.0000,
                             3322.6001, 3324.0000, 3325.6001, 3327.0000, 3328.3999, 3329.3999, 3330.3999, 3331.2000, 3332.2000, 3333.0000, 3334.0000, 3335.0000, 3336.0000, 3337.0000, 3338.0000,
                             3339.0000, 3340.0000, 3341.0000, 3342.0000, 3342.8000, 3343.8000, 3344.8000, 3345.6001, 3346.2000, 3347.0000, 3348.0000, 3348.8000, 3349.6001, 3350.2000, 3351.0000,
                             3352.0000, 3352.8000, 3353.6001, 3354.2000, 3355.0000, 3356.0000, 3356.8000, 3357.8000, 3358.3999, 3359.0000, 3360.0000, 3360.8000, 3361.6001, 3362.0000, 3363.0000,
                             3363.8000, 3364.6001, 3365.0000, 3366.0000, 3366.8000, 3367.6001, 3368.0000, 3369.0000, 3369.8000, 3370.6001, 3371.0000, 3372.0000, 3372.8000, 3373.6001, 3374.0000,
                             3375.0000, 3375.8000, 3376.6001, 3377.3999, 3378.0000, 3379.0000, 3380.0000, 3380.8000, 3381.8000, 3382.6001, 3383.3999, 3384.2000, 3385.0000, 3386.0000, 3386.8000,
                             3387.8000, 3388.6001, 3389.3999, 3390.2000, 3391.0000, 3392.0000, 3393.0000, 3393.8000, 3394.8000, 3395.8000, 3396.8000, 3397.8000, 3398.8000, 3399.8000, 3400.8000,
                             3401.8000, 3402.8000, 3403.6001, 3404.6001, 3405.6001, 3406.3999, 3407.3999, 3408.2000, 3409.0000, 3409.8000, 3410.3999, 3411.0000, 3411.8000, 3412.6001, 3413.0000,
                             3414.0000, 3414.8000, 3415.3999, 3416.0000, 3416.8000, 3417.6001, 3418.0000, 3418.8000, 3419.8000, 3420.2000, 3421.0000, 3421.8000, 3422.3999, 3423.0000, 3423.8000,
                             3424.8000, 3425.3999, 3426.2000, 3427.0000, 3428.0000, 3429.0000, 3429.8000, 3430.8000, 3431.8000, 3432.3999, 3433.2000, 3434.0000, 3435.0000, 3436.0000, 3436.8000,
                             3437.8000, 3438.6001, 3439.3999, 3440.2000, 3441.2000, 3442.2000, 3443.2000, 3444.2000, 3445.2000, 3446.2000, 3447.2000, 3448.0000, 3449.0000, 3450.0000, 3451.0000,
                             3452.0000, 3453.0000, 3454.0000, 3455.0000, 3456.0000, 3457.0000, 3458.0000, 3458.8000, 3459.8000, 3460.6001, 3461.2000, 3462.0000, 3463.0000, 3464.0000, 3464.8000,
                             3465.8000, 3466.6001, 3467.2000, 3468.0000, 3469.0000, 3470.0000, 3470.8000, 3471.8000, 3472.6001, 3473.0000, 3474.0000, 3474.8000, 3475.8000, 3476.3999, 3477.0000,
                             3478.0000, 3478.8000, 3479.6001, 3480.0000, 3481.0000, 3481.8000, 3482.8000, 3483.3999, 3484.0000, 3485.0000, 3485.8000, 3486.6001, 3487.0000, 3488.0000, 3488.8000,
                             3489.6001, 3490.0000, 3490.8000, 3491.8000, 3492.2000, 3493.0000, 3493.8000, 3494.6001, 3495.0000, 3496.0000, 3496.8000, 3497.2000, 3498.0000, 3498.8000, 3499.6001,
                             3500.0000, 3501.0000, 3501.8000, 3502.3999, 3503.0000, 3503.8000, 3504.8000, 3505.8000, 3506.6001, 3507.6001, 3508.3999, 3509.3999, 3510.2000, 3511.2000, 3512.0000,
                             3513.0000, 3514.0000, 3515.0000, 3516.0000, 3517.0000, 3518.0000, 3518.8000, 3519.8000, 3520.8000, 3521.3999, 3522.0000, 3522.8000, 3523.8000, 3524.2000, 3525.0000,
                             3525.8000, 3526.6001, 3527.0000, 3528.0000, 3528.8000, 3529.3999, 3530.0000, 3530.8000, 3531.8000, 3532.2000, 3533.0000, 3533.8000, 3534.6001, 3535.2000, 3536.0000,
                             3536.8000, 3537.2000, 3538.0000, 3538.8000, 3539.0000, 3539.8000, 3540.6001, 3541.0000, 3541.8000, 3542.6001, 3543.0000, 3543.8000, 3544.3999, 3545.0000, 3545.8000,
                             3546.2000, 3547.0000, 3547.8000, 3548.2000, 3548.8000, 3549.6001, 3550.0000, 3550.8000, 3551.6001, 3552.0000, 3552.8000, 3553.8000, 3554.6001, 3555.2000, 3556.0000,
                             3556.8000, 3557.8000, 3558.3999, 3559.0000, 3560.0000, 3560.8000, 3561.8000, 3562.2000, 3563.0000, 3564.0000, 3564.8000, 3565.6001, 3566.2000, 3567.0000, 3567.8000,
                             3568.8000, 3569.0000, 3569.8000, 3570.3999, 3571.0000, 3571.8000, 3572.0000, 3572.8000, 3573.6001, 3574.0000, 3574.8000, 3575.2000, 3576.0000, 3576.6001, 3577.0000,
                             3577.8000, 3578.3999, 3579.0000, 3579.8000, 3580.0000, 3580.8000, 3581.6001, 3582.0000, 3582.8000, 3583.2000, 3584.0000, 3584.8000, 3585.2000, 3586.0000, 3586.8000,
                             3587.3999, 3588.0000, 3588.8000, 3589.6001, 3590.0000, 3590.8000, 3591.6001, 3592.0000, 3593.0000, 3593.8000, 3594.2000, 3595.0000, 3595.8000, 3596.3999, 3597.0000,
                             3597.8000, 3598.6001, 3599.0000, 3600.0000, 3600.8000, 3601.0000, 3601.8000, 3602.6001, 3603.0000, 3603.8000, 3604.3999, 3605.0000, 3605.8000, 3606.3999, 3607.0000,
                             3607.8000, 3608.2000, 3609.0000, 3609.8000, 3610.0000, 3610.8000, 3611.6001, 3612.0000, 3612.8000, 3613.3999, 3614.0000, 3614.8000, 3615.3999, 3616.0000, 3616.8000,
                             3617.3999, 3618.0000, 3618.8000, 3619.6001, 3620.0000, 3621.0000, 3621.8000, 3622.3999, 3623.0000, 3623.8000, 3624.6001, 3625.0000, 3626.0000, 3626.8000, 3627.2000,
                             3628.0000, 3628.8000, 3629.3999, 3630.0000, 3630.8000, 3631.8000, 3632.2000, 3633.0000, 3633.8000, 3634.3999, 3635.0000, 3635.8000, 3636.6001, 3637.0000, 3638.0000,
                             3638.8000, 3639.3999, 3640.0000, 3640.8000, 3641.6001, 3642.0000, 3643.0000, 3643.8000, 3644.3999, 3645.0000, 3645.8000, 3646.6001, 3647.0000, 3648.0000, 3648.8000,
                             3649.2000, 3650.0000, 3650.8000, 3651.3999, 3652.0000, 3652.8000, 3653.6001, 3654.0000, 3654.8000, 3655.6001, 3656.0000, 3657.0000, 3657.8000, 3658.2000, 3659.0000,
                             3659.8000, 3660.3999, 3661.0000, 3661.8000, 3662.6001, 3663.0000, 3663.8000, 3664.6001, 3665.0000, 3665.8000, 3666.2000, 3667.0000, 3667.6001, 3668.0000, 3668.8000,
                             3669.3999, 3670.0000, 3670.8000, 3671.0000, 3671.8000, 3672.3999, 3673.0000, 3673.8000, 3674.2000, 3674.8000, 3675.6001, 3676.0000, 3676.8000, 3677.2000, 3678.0000,
                             3678.6001, 3679.0000, 3679.8000, 3680.3999, 3681.0000, 3681.8000, 3682.8000, 3683.2000, 3684.0000, 3684.8000, 3685.6001, 3686.2000, 3687.0000, 3687.8000, 3688.6001,
                             3689.0000, 3690.0000, 3690.8000, 3691.3999, 3692.0000, 3692.8000, 3693.8000, 3694.2000, 3695.0000, 3695.8000, 3696.6001, 3697.2000, 3698.0000, 3698.8000, 3699.6001,
                             3700.2000, 3701.0000, 3701.8000, 3702.8000, 3703.2000, 3704.0000, 3704.8000, 3705.8000, 3706.2000, 3707.0000, 3707.8000, 3708.8000, 3709.2000, 3710.0000, 3710.8000,
                             3711.8000, 3712.3999, 3713.0000, 3713.8000, 3714.6001, 3715.0000, 3716.0000, 3716.8000, 3717.3999, 3718.0000, 3718.8000, 3719.6001, 3720.0000, 3721.0000, 3721.8000,
                             3722.3999, 3723.0000, 3723.8000, 3724.6001, 3725.2000, 3726.0000, 3726.8000, 3727.3999, 3728.0000, 3728.8000, 3729.0000, 3729.8000, 3730.0000, 3730.6001, 3731.0000,
                             3731.6001, 3732.0000, 3732.3999, 3733.0000, 3733.3999, 3733.8000, 3734.2000, 3734.8000, 3735.2000, 3735.8000, 3736.0000, 3736.8000, 3737.0000, 3737.8000, 3738.0000,
                             3738.8000, 3739.0000, 3739.8000, 3740.0000, 3740.6001, 3741.0000, 3741.6001, 3742.0000, 3742.3999, 3743.0000, 3743.3999, 3743.8000, 3744.3999, 3745.0000, 3745.8000,
                             3746.3999, 3747.0000, 3747.8000, 3748.3999, 3749.0000, 3749.8000, 3750.3999, 3751.0000, 3751.8000, 3752.3999, 3753.0000, 3753.8000, 3754.3999, 3755.0000, 3755.8000,
                             3756.3999, 3757.0000, 3757.8000, 3758.3999, 3759.0000, 3759.8000, 3760.3999, 3761.0000, 3761.8000, 3762.0000, 3762.8000, 3763.6001, 3764.0000, 3764.8000, 3765.3999,
                             3766.0000, 3766.8000, 3767.0000, 3767.8000, 3768.6001, 3769.0000, 3769.8000, 3770.2000, 3771.0000, 3771.8000, 3772.0000, 3772.8000, 3773.6001, 3774.0000, 3774.8000,
                             3775.2000, 3776.0000, 3776.8000, 3777.2000, 3778.0000, 3778.8000, 3779.3999, 3780.0000, 3780.8000, 3781.6001, 3782.0000, 3782.8000, 3783.8000, 3784.2000, 3785.0000,
                             3785.8000, 3786.3999, 3787.0000, 3787.8000, 3788.3999, 3789.0000, 3789.8000, 3790.6001, 3791.0000, 3792.0000, 3792.8000, 3793.0000, 3793.8000, 3794.2000, 3795.0000,
                             3795.6001, 3796.0000, 3796.8000, 3797.2000, 3798.0000, 3798.6001, 3799.0000, 3799.8000, 3800.2000, 3801.0000, 3801.6001, 3802.0000, 3802.8000, 3803.2000, 3803.8000,
                             3804.6001, 3805.0000, 3805.8000, 3806.2000, 3806.8000, 3807.6001, 3808.0000, 3808.8000, 3809.0000, 3809.8000, 3810.0000, 3810.8000, 3811.0000, 3811.8000, 3812.0000,
                             3812.8000, 3813.0000, 3813.8000, 3814.0000, 3814.8000, 3815.0000, 3815.8000, 3816.0000, 3816.8000, 3817.0000, 3817.8000, 3818.0000, 3818.8000, 3819.0000, 3819.8000,
                             3820.0000, 3820.8000, 3821.0000, 3821.8000, 3822.2000, 3822.8000, 3823.2000, 3823.8000, 3824.3999, 3825.8000, 3827.0000, 3828.2000, 3829.8000, 3831.0000, 3832.2000,
                             3833.8000, 3834.8000, 3836.0000, 3837.6001, 3838.8000, 3840.0000, 3840.8000, 3841.2000, 3842.0000, 3842.6001, 3843.0000, 3843.8000, 3844.2000, 3844.8000, 3845.6001,
                             3846.0000, 3846.8000, 3847.0000, 3847.8000, 3848.3999, 3849.0000, 3849.8000, 3850.0000, 3850.8000, 3851.2000, 3852.0000, 3852.6001, 3853.0000, 3853.8000, 3854.2000,
                             3854.8000, 3855.6001, 3856.0000, 3856.8000, 3857.0000, 3857.8000, 3858.3999, 3859.0000, 3859.6001, 3860.0000, 3860.8000, 3861.2000, 3861.8000, 3862.3999, 3863.0000,
                             3863.8000, 3864.0000, 3864.8000, 3865.2000, 3865.8000, 3866.3999, 3867.0000, 3867.8000, 3868.0000, 3868.8000, 3869.2000, 3869.8000, 3870.6001, 3871.0000, 3871.8000,
                             3872.0000, 3872.8000, 3873.0000, 3873.8000, 3874.2000, 3874.8000, 3875.2000, 3875.8000, 3876.2000, 3876.8000, 3877.3999, 3877.8000, 3878.3999, 3879.0000, 3879.3999,
                             3880.0000, 3880.6001, 3881.0000, 3881.6001, 3882.0000, 3882.6001, 3883.0000, 3883.8000, 3884.0000, 3884.8000, 3885.0000, 3885.8000, 3886.0000, 3886.8000, 3887.0000,
                             3887.8000, 3888.0000, 3888.8000, 3889.3999, 3890.0000, 3890.8000, 3891.0000, 3891.8000, 3892.3999, 3893.0000, 3893.8000, 3894.2000, 3894.8000, 3895.6001, 3896.0000,
                             3896.8000, 3897.2000, 3897.8000, 3898.6001, 3899.0000, 3899.8000, 3900.2000, 3901.0000, 3901.6001, 3902.0000, 3902.8000, 3903.2000, 3904.0000, 3904.6001, 3905.0000,
                             3905.8000, 3906.3999, 3907.0000, 3907.8000, 3908.2000, 3909.0000, 3909.8000, 3910.0000, 3910.8000, 3911.3999, 3912.0000, 3912.8000, 3913.2000, 3914.0000, 3914.8000,
                             3915.0000, 3915.8000, 3916.3999, 3917.0000, 3917.8000, 3918.2000, 3919.0000, 3919.8000, 3920.0000, 3920.8000, 3921.0000, 3921.8000, 3922.0000, 3922.8000, 3923.0000,
                             3923.8000, 3924.0000, 3924.8000, 3925.0000, 3925.6001, 3926.0000, 3926.6001, 3927.0000, 3927.6001, 3928.0000, 3928.3999, 3929.0000, 3929.3999, 3929.8000, 3930.3999,
                             3930.8000, 3931.2000, 3931.8000, 3932.2000, 3932.8000, 3933.2000, 3933.8000, 3934.2000, 3934.8000, 3935.0000, 3935.8000, 3936.0000, 3936.8000, 3937.3999, 3938.0000,
                             3938.8000, 3939.0000, 3939.8000, 3940.3999, 3941.0000, 3941.8000, 3942.0000, 3942.8000, 3943.3999, 3944.0000, 3944.6001, 3945.0000, 3945.8000, 3946.2000, 3947.0000,
                             3947.6001, 3948.0000, 3948.8000, 3949.2000, 3950.0000, 3950.6001, 3951.0000, 3951.8000, 3952.2000, 3953.0000, 3953.8000, 3954.2000, 3955.0000, 3955.8000, 3956.2000,
                             3957.0000, 3957.8000, 3958.2000, 3959.0000, 3959.8000, 3960.2000, 3961.0000, 3961.8000, 3962.0000, 3963.0000, 3963.8000, 3964.0000, 3964.8000, 3965.6001, 3966.0000,
                             3966.8000, 3967.6001, 3968.0000, 3968.8000, 3969.2000, 3969.8000, 3970.2000, 3970.8000, 3971.3999, 3972.0000, 3972.6001, 3973.0000, 3973.8000, 3974.0000, 3974.8000,
                             3975.0000, 3975.8000, 3976.2000, 3976.8000, 3977.3999, 3977.8000, 3978.3999, 3979.0000, 3979.6001, 3980.0000, 3980.8000, 3981.0000, 3981.8000, 3982.0000, 3982.8000,
                             3983.2000, 3983.8000, 3984.2000, 3984.8000, 3985.2000, 3985.8000, 3986.2000, 3986.8000, 3987.0000, 3987.8000, 3988.0000, 3988.8000, 3989.0000, 3989.8000, 3990.0000,
                             3990.8000, 3991.0000, 3991.8000, 3992.0000, 3992.8000, 3993.0000, 3993.6001, 3994.0000, 3994.6001, 3995.0000, 3995.6001, 3996.0000, 3996.6001, 3997.0000, 3997.3999,
                             3998.0000, 3998.3999, 3998.8000, 3999.3999, 3999.8000, 4000.2000, 4000.8000, 4001.3999, 4002.0000, 4002.3999, 4003.0000, 4003.6001, 4004.0000, 4004.6001, 4005.0000,
                             4005.8000, 4006.0000, 4006.8000, 4007.0000, 4007.8000, 4008.0000, 4008.8000, 4009.2000, 4009.8000, 4010.2000, 4010.8000, 4011.3999, 4011.8000, 4012.3999, 4013.0000,
                             4013.6001, 4014.0000, 4014.6001, 4015.0000, 4015.8000, 4016.0000, 4016.8000, 4017.0000, 4017.8000, 4018.0000, 4018.8000, 4019.2000, 4019.8000, 4020.2000, 4020.8000,
                             4021.3999, 4022.0000, 4022.6001, 4023.0000, 4023.6001, 4024.0000, 4024.8000, 4025.0000, 4025.8000, 4026.0000, 4026.8000, 4027.2000, 4027.8000, 4028.2000, 4028.8000,
                             4029.3999, 4030.0000, 4030.6001, 4031.0000, 4031.6001, 4032.0000, 4033.6001, 4035.0000, 4037.0000, 4038.8000, 4040.3999, 4042.0000, 4043.8000, 4045.8000, 4047.20};

// ESPNOW
bool EspNowHabilitado = false;
bool EspNowEnvioOK = false;   // a mensagem foi enviada?
bool EspNowEntregaOK = false; // a mensagem foi enviada e entregue?

// INSTANCIAS

OneButton bt_descarga(PIN_DESCARGA_IN, false, false);
OneButton bt_ducheLuz(PIN_DUCHE_LUZ_IN, false, false);
OneButton bt_luzAmbiente(PIN_AQUECEDOR_IN, true, true);
OneButton bt_audio(PIN_AUDIO_IN, true, true);
OneButton bt_aquecedor(PIN_AQUECEDOR_IN, true, true);

SHtools_ESP32_OTA_AP FirmwareUpdate(LED_BUILTIN, PIN_UPDATE, "sotao_banheiro");

// FUNÇÕES

void COMANDOS(bool executar, int cmd, int arg1, int arg2, String argSTR);
void LuzAmbiente_Handler();
void LuzAmbiente_PIR();
void luz_banheira();
void Fluxo_handler();
void NTC_handler();
void IRAM_ATTR fluxo_contaPulsos();
void DESCARGA_numero1();
void DESCARGA_mumero2();
void DESCARGA_onDemand();
void DESCARGA_onDemand_fim();
void DESCARGA_handler();
void DESCARGA_ligar(byte modo);
void DESCARGA_desligar();
void DESCARGA_liberar();

bool EspNow_EnviarDadosComTimeout(const char *payload, unsigned long timeoutMs);
void EspNow_CallbackEnvioStatus(const uint8_t *mac_addr, esp_now_send_status_t status);
void EspNow_CallbackReceber(const uint8_t *mac_addr, const uint8_t *data, int len);

void interruptor_luzAmbiente();
void interruptor_audio();
void interruptor_aquecedor();
void interruptor_ducheLuz();

void setup()
{
    Serial.begin(115200);
    delay(1000);

    // -- input
    pinMode(PIN_DUCHE_LUZ_IN, INPUT);
    pinMode(PIN_DUCHE_FLUXO, INPUT);
    pinMode(PIN_DUCHE_TEMPERATURA, INPUT);
    pinMode(PIN_LUZ_AMBIENTE_IN, INPUT);
    pinMode(PIN_AUDIO_IN, INPUT);
    pinMode(PIN_AQUECEDOR_IN, INPUT);
    pinMode(PIN_DESCARGA_IN, INPUT);
    pinMode(PIN_PIR, INPUT_PULLDOWN);
    pinMode(PIN_UPDATE, INPUT_PULLUP);

    // -- output
    pinMode(PIN_DUCHE_LUZ_OUT, OUTPUT);
    pinMode(PIN_AUDIO_OUT, OUTPUT);
    pinMode(PIN_AQUECEDOR_OUT, OUTPUT);

    pinMode(PIN_DESCARGA_OUT, OUTPUT);
    pinMode(PIN_DUCHE_LEDS_OUT, OUTPUT);
    pinMode(PIN_BUZZER, OUTPUT);
    pinMode(LED_BUILTIN, OUTPUT);
    pinMode(PIN_LUZ_AMBIENTE_OUT, OUTPUT);

    // -- digitalWrite
    digitalWrite(PIN_DESCARGA_OUT, LOW);
    digitalWrite(PIN_LUZ_AMBIENTE_OUT, LOW);
    digitalWrite(PIN_DUCHE_LEDS_OUT, LOW);
    digitalWrite(PIN_BUZZER, LOW);
    digitalWrite(LED_BUILTIN, LOW);

    // inicia a biblioetca
    FirmwareUpdate.begin();

    // DESCARGA

    // Defina as funções callback para os clicks do botao descarga
    bt_descarga.attachClick(DESCARGA_numero1);
    bt_descarga.attachDoubleClick(DESCARGA_mumero2);
    bt_descarga.attachLongPressStart(DESCARGA_onDemand);
    bt_descarga.attachLongPressStop(DESCARGA_onDemand_fim);

    bt_descarga.setDebounceMs(50); // Mantém o debounce padrão
    bt_descarga.setClickMs(1000);  // Timeout used to distinguish single clicks from double clicks.
    bt_descarga.setPressMs(1500);  // Duration to hold a button to trigger a long press.

    bt_audio.attachClick(interruptor_audio);
    bt_aquecedor.attachClick(interruptor_aquecedor);
    bt_luzAmbiente.attachClick(interruptor_luzAmbiente);
    bt_ducheLuz.attachClick(interruptor_ducheLuz);

    // SENSOR DE FLUXO
    attachInterrupt(digitalPinToInterrupt(PIN_DUCHE_FLUXO), fluxo_contaPulsos, RISING); // Configura a interrupção

    // SENSOR DE TEMPERATURA NTC50k
    ntc_adcMax = 4095.0; // ADC resolution 12-bit (0-4095)
    ntc_Vs = 3.3;        // supply voltage

    /*
        ESP-NOW configuração
        WiFi must be powered on to use ESP-NOW unicast.
        It could be either AP or STA mode, and does not have to be connected.
        For best results, ensure both devices are using the same WiFi channel.
        */
    WiFi.persistent(false); // Desativa a persistência das configurações do Wi-Fi para proteger a memoria flash
    WiFi.mode(WIFI_STA);    // Configura o wifi para funcionar como STA (cliente)
    WiFi.disconnect();      // Convém desconectar de qualquer rede wifi antes de configurar o espnow
    delay(100);

    /* ESPNOW

        Tento iniciar o EspNow por 3 vezes e se não conseguir, reinicia o esp
        Após 3 reinicios do esp sem sucesso de iniciar o espnow,
        desabilito o espnow e rodo o codigo normalmente até o proximo reinicio,
        onde as tentativas de iniciar o espnow serão retomadas
    */
    for (int i = 0; i < 3; i++)
    {
        // inicializa o espnow com o canal definido no wifi
        // adicionando um parceiro, com possibilidade de definir uma chave criptografica que deve estar igual em ambos
        // const uint8_t chaveCriptografia[] = { 0x12, 0x34, 0x56, 0x78, 0x90, 0xAB, 0xCD, 0xEF }; // Substitua com sua chave
        // ok = WifiEspNow.addPeer(PEER, true, chaveCriptografia);

        if (esp_now_init() == ESP_OK) // tenta iniciar o espnow
        {
            // configura o peer
            esp_now_peer_info_t peerInfo;
            memset(&peerInfo, 0, sizeof(peerInfo));
            memcpy(peerInfo.peer_addr, PEER, 6); // PEER é o endereço MAC do parceiro
            peerInfo.channel = 1;                // Canal definido no Wi-Fi
            peerInfo.encrypt = false;            // Ajuste para criptografia, se necessário

            // tenta adicionar o peer
            if (esp_now_add_peer(&peerInfo) == ESP_OK)
            {
                // Define a função de callback para recebimento de dados
                esp_now_register_recv_cb(EspNow_CallbackReceber);
                // Define a função de callback para após o envio dos dados para informar o status do envio
                esp_now_register_send_cb(EspNow_CallbackEnvioStatus);

                EspNowHabilitado = true;
                break; // sai do loop for
            }
            else
            {
                Serial.println(F("Falha ao adicionar peer"));
            }
        }
        else
        {
            Serial.println(F("Falha ao inicializar o ESP-NOW"));
        }

        delay(2000);
        if (i == 2)
        { // Terceira tentativa falha
            EspNowHabilitado = false;
        }
    }

    // Led aceso indica que EspNow está ativo; apagado indica desabilitado
    digitalWrite(LED_BUILTIN, EspNowHabilitado);

    // Armazena o momento inicial para restart
    restart_momentoInicial = millis();
}

void loop()
{
    // processa as requisições da biblioteca
    FirmwareUpdate.handle();

    // se estiver em modo de update, não executa outras tarefas
    // if (FirmwareUpdate.get_ServerMode())
    //  return;

    // A cada 24h, verifica se o espnow está habilitado e caso não esteja, reinicia o esp32
    unsigned long currentMillis = millis();
    if (currentMillis - restart_momentoInicial >= restart_periodo)
    {
        if (EspNowHabilitado)
        {
            restart_momentoInicial = millis(); // renova o moment inicial do periodo
        }
        else
        {
            ESP.restart(); // Reinicia o ESP32
        }
    }

    // DESCARGA
    DESCARGA_handler();

    bt_ducheLuz.tick();
    bt_luzAmbiente.tick();
    bt_audio.tick();
    bt_aquecedor.tick();

    // SENSOR DE FLUXO E TEMPERATURA
    Fluxo_handler();

    // SENSOR DE TEMPERATURA NTC50K
    NTC_handler();

    // LEDS DUCHE
    // aciona o rele 6 que liga leds do nicho e da base da duche
    if (LuzAmbiente_EstagioInicial == false)
    {
        digitalWrite(PIN_DUCHE_LEDS_OUT, (chuveiroLigado) ? HIGH : LOW);
    }

    // LUZ AMBIENTE - PIR
    LuzAmbiente_PIR();

    // LUZ AMBIENTE
    LuzAmbiente_Handler();
}

// Função para enviar dados com timeout e retorno de sucesso ou falha
bool EspNow_EnviarDadosComTimeout(const char *payload, unsigned long timeoutMs)
{
    // Reseta as flags de status
    EspNowEnvioOK = false;
    EspNowEntregaOK = false;

    // Envia os dados via ESP-NOW
    if (esp_now_send(PEER, (const uint8_t *)payload, strlen(payload)) != ESP_OK)
    {
        Serial.println(F("Erro imediato ao tentar enviar os dados."));
        return false;
    }

    // Aguarda a confirmação do envio ou o timeout
    unsigned long tempoInicial = millis();
    while (!EspNowEnvioOK)
    { // Aguarda o callback de mensagem enviada ser chamado
        if ((millis() - tempoInicial) >= (timeoutMs * 1000))
        {
            Serial.println(F("Timeout: nenhuma resposta do peer."));
            return false;
        }
        delay(10); // Aguarda um pouco antes de verificar novamente
    }

    // Retorna se os dados foram enviados e recebidos
    return EspNowEntregaOK;
}

// Função de callback para verificar o status do envio (entrega)
void EspNow_CallbackEnvioStatus(const uint8_t *mac_addr, esp_now_send_status_t status)
{
    if (status == ESP_NOW_SEND_SUCCESS)
    {
        EspNowEntregaOK = true;
        Serial.println(F("Peer está online e mensagem enviada e recebida com sucesso"));
    }
    else
    {
        EspNowEntregaOK = false;
        Serial.println(F("Falha no envio. Peer pode estar offline ou MAC incorreto"));
    }

    EspNowEnvioOK = true; // O callback de status de envio foi chamado então o envio está funcionando
}

// Função de callback para receber os dados
void EspNow_CallbackReceber(const uint8_t *mac_addr, const uint8_t *data, int len)
{
    /*
    id de comando + . + executar(0 ou 1)? + . + comando + . + arg1 + . + arg2 + . + argSTR
    valores -1 ou "" serão ignorados
    */

    char msgRecebida[100]; // Variável para armazenar a mensagem recebida

    // Verifica se o comprimento da mensagem recebida é menor que o tamanho da variável 'msgRecebida'
    if (len < sizeof(msgRecebida))
    {
        // Copia a mensagem recebida (armazenada em 'data') para a variável 'msgRecebida'
        memcpy(msgRecebida, data, len);
        // Adiciona o caractere de terminação no final da mensagem recebida para garantir que ela seja uma string válida em C++
        msgRecebida[len] = '\0';
    }

    // Converte a mensagem recebida em uma string
    String msgString = String(msgRecebida);

    // Serial.println("msgRecebida" + msgRecebida);

    // Verifica se os 14 primeiros caracteres são iguais ao identificador de comando
    if (msgString.substring(0, 14) == String(comID))
    {
        // Verifica se o próximo caractere é um ponto
        if (msgString.charAt(14) == '.')
        {
            int nextDotPos;
            int startPos = 15;
            int executar = -1;
            int cmd = -1;
            int arg1 = -1;
            int arg2 = -1;
            String argSTR = "";

            // Converte os caracteres após o ponto em um número e armazena na variável 'executar'
            nextDotPos = msgString.indexOf('.', startPos);
            executar = msgString.substring(startPos, nextDotPos).toInt();
            startPos = nextDotPos + 1;

            if (nextDotPos != -1)
            {
                // Converte os próximos caracteres em um número e armazena na variável 'cmd'
                nextDotPos = msgString.indexOf('.', startPos);
                cmd = msgString.substring(startPos, nextDotPos).toInt();
                startPos = nextDotPos + 1;
            }

            if (nextDotPos != -1)
            {
                // Converte os próximos caracteres em um número e armazena na variável 'arg1'
                nextDotPos = msgString.indexOf('.', startPos);
                arg1 = msgString.substring(startPos, nextDotPos).toInt();
                startPos = nextDotPos + 1;
            }

            if (nextDotPos != -1)
            {
                // Converte os próximos caracteres em um número e armazena na variável 'arg2'
                nextDotPos = msgString.indexOf('.', startPos);
                arg2 = msgString.substring(startPos, nextDotPos).toInt();
                startPos = nextDotPos + 1;
            }

            if (nextDotPos != -1)
            {
                // Obtém todos os próximos caracteres até o fim da mensagem e guarda na variável 'argSTR'
                argSTR = msgString.substring(startPos);
            }

            if (cmd == -1)
            {
                return;
            }

            // Envia 'executar', 'cmd' e argumentos para a função
            COMANDOS(executar, cmd, arg1, arg2, argSTR);
        }
    }
}

void interruptor_luzAmbiente()
{
    if (LuzAmbiente_ON)
    {
        // se a luz estiver acesa, zera o contador para ela ser desligada posteriormente (renova o tempo)
        LuazAmbiente_contador = 0;
    }
    else
    {
        LuazAmbiente_contador = (millis() + LuzAmbiente_tempoMax); // 3 minutos
        LuzAmbiente_ON = true;
    }
}

void interruptor_audio()
{
    bool estadoAtual = !digitalRead(PIN_AUDIO_OUT);
    digitalWrite(PIN_AUDIO_OUT, estadoAtual);
    audio_ON = estadoAtual;
}

void interruptor_aquecedor()
{
    bool estadoAtual = !digitalRead(PIN_AQUECEDOR_OUT);
    digitalWrite(PIN_AQUECEDOR_OUT, estadoAtual);
    aquecedor_ON = estadoAtual;
}

void interruptor_ducheLuz()
{
    bool estadoAtual = !digitalRead(PIN_DUCHE_LUZ_OUT);
    digitalWrite(PIN_DUCHE_LUZ_OUT, estadoAtual);
    ducheLuz_ON = estadoAtual;
}

void LuzAmbiente_Handler()
{
    if (LuzAmbiente_ON)
    {
        digitalWrite(PIN_LUZ_AMBIENTE_OUT, HIGH); // Acende a luz do chao e os led do movel da pia

        if (millis() > LuazAmbiente_contador)
        {
            LuzAmbiente_ON = false;
            LuazAmbiente_contador = 0;
            digitalWrite(PIN_LUZ_AMBIENTE_OUT, LOW); // Apaga a luz do chao e os led do movel da pia
        }

        // acende ou apaga as luzes de estagio inicial
        if (LuzAmbiente_EstagioInicial)
        {
            if ((millis() - LuzAmbiente_EstagioInicial_UltimoON) > LuzAmbiente_EstagioInicial_tempo)
            {
                digitalWrite(PIN_DUCHE_LEDS_OUT, LOW); // apaga luzes da base e nicho da duche
                if (banheiraLed_ON)
                    luz_banheira();                 // apaga a luz da banheira
                LuzAmbiente_EstagioInicial = false; // apagará as luzes ambiente de estagio inicial
            }
            else
            {
                digitalWrite(PIN_DUCHE_LEDS_OUT, HIGH); // acende luzes da base e nicho da duche
                if (!banheiraLed_ON)
                    luz_banheira(); // acende a luz da banheira
            }
        }
    }
}

void LuzAmbiente_PIR()
{
    if (digitalRead(PIN_PIR) == HIGH &&
        (millis() - pir_ultimaLeitura) > pir_intervaloLeitura)
    {
        if (!LuzAmbiente_ON)
        {
            LuazAmbiente_contador = (millis() + LuzAmbiente_tempoMax);
            LuzAmbiente_ON = true;

            // acenderá as luzes ambiente de estagio inicial
            LuzAmbiente_EstagioInicial = true;
            LuzAmbiente_EstagioInicial_UltimoON = millis();
        }
        pir_ultimaLeitura = millis();
    }
}

// Solicita inversão do estado da luz da banheira via ESPNOW.
void luz_banheira()
{

    // Se o EspNow estiver habilitado, tenta enviar o novo estado do rele
    if (EspNowHabilitado)
    {
        // Uso sprintf para formatar a string
        char payload[100];
        sprintf(payload, "%s.%d.%d.%d.%d.%s", comID, 1, 1, -1, -1, "");

        /*
        id de comando + . + executar(0 ou 1)? + . + comando + . + arg1 + . + arg2 + . + argSTR
        valores -1 ou "" serão ignorados
        */

        // Tenta enviar o estado atual do relé para o ESP32 banheiro via EspNow com timeout de 5 segundos
        EspNow_EnviarDadosComTimeout(payload, 5);
    }
}

// SENSOR FLUXO/TEMPERATURA - Leitura de fluxo e temperatura da agua do chuveiro
void Fluxo_handler()
{
    static int numLeituras = 0;
    static int vazaoLeituras = 0;

    if ((millis() - fluxo_previousMillis) >= fluxo_intervaloLeituras)
    {
        if (numLeituras == fluxo_qntLeituras) // Se atingiu o numero de leituras determinado
        {
            vazaoLeituras /= fluxo_qntLeituras;                    // faz a media das leituras
            chuveiroLigado = (vazaoLeituras >= fluxo_vazaoMinima); // define se o chuveiro está ligado

            if (vazaoLeituras >= fluxo_vazaoMinima)
            {
                digitalWrite(PIN_BUZZER, HIGH);
                delay(3000);
                digitalWrite(PIN_BUZZER, LOW);

                while (true)
                {
                    /* code */
                }
            }

            numLeituras = 0;                 // reseta a quantidade de leituras
            vazaoLeituras = 0;               // reseta o valor das leituras
            fluxo_previousMillis = millis(); // marca momento da definição da vazão
        }
        else // Se ainda não atingiu o numero de leituras determinado, faz a leitura e soma o resultado
        {
            vazaoLeituras += (fluxo_numPulsos / 4.5); // Calcula a vazão em L/min e soma à anterior
                                                      // Q = ΔV/Δt. O fator de conversão é 4.5 conforme a datasheet do YF-B7
            numLeituras++;                            // incrementa o numero de leituras em +1
            fluxo_numPulsos = 0;                      // Reinicia o contador de pulsos
        }
    }
}

// Sensor de Fluxo - Interrupção para incrementar o contador de pulsos
void IRAM_ATTR fluxo_contaPulsos()
{
    fluxo_numPulsos++;
}

void NTC_handler()
{
    unsigned long currentMillis = millis();

    if (currentMillis - ntc_ultimoMillis >= ntc_intervalo)
    {
        double Vout, Rt = 0;
        double T, Tc, Tf = 0;

        double adc = 0;

        adc = analogRead(PIN_DUCHE_TEMPERATURA);

        adc = ADC_LUT[(int)adc];

        Vout = adc * ntc_Vs / ntc_adcMax;
        Rt = ntc_R1 * Vout / (ntc_Vs - Vout);

        T = 1 / (1 / ntc_To + log(Rt / ntc_Ro) / ntc_Beta); // Temperature in Kelvin
        Tc = T - 273.15;                                    // Celsius
        Tf = Tc * 9 / 5 + 32;                               // Fahrenheit

        // Adicione a nova leitura à janela e calcule a média móvel
        ntc_sum -= ntc_readings[ntc_currentIndex];
        ntc_readings[ntc_currentIndex] = Tc;
        ntc_sum += Tc;
        ntc_currentIndex = (ntc_currentIndex + 1) % ntc_WINDOW_SIZE;
        double averageTc = ntc_sum / ntc_WINDOW_SIZE;

        if (averageTc > 0)
        {
            // Serial.println(averageTc);
        }

        ntc_ultimoMillis = currentMillis;
    }
}

/********************* DESCARGA *********************/
void DESCARGA_numero1()
{
    DESCARGA_ligar(1);
}

void DESCARGA_mumero2()
{
    DESCARGA_ligar(2);
}

void DESCARGA_onDemand()
{
    DESCARGA_ligar(3);
}

void DESCARGA_onDemand_fim()
{
    // desativa o modo onDemand
    descarga_ModoOnDemand = false;

    // define o tempo de espera = o tempo que ficou pressionado
    descarga_tempoEspera = millis() - descarga_inicioTempoEspera;
}

void DESCARGA_handler()
{
    // se a descarga estiver acionada por demasiado tempo, pode ser uma pane.
    if (digitalRead(PIN_DESCARGA_OUT) == HIGH && (millis() - descarga_inicioTempoEspera) > descarga_tempoAlarme)
    {
        // tento fechar a descarga, desativar a leitura do pino e desabilitar a descarga
        digitalWrite(PIN_BUZZER, HIGH);
        digitalWrite(PIN_DESCARGA_OUT, LOW);
        delay(descarga_tempoMax + descarga_MargemSeguranca);
        pinMode(PIN_DESCARGA_OUT, INPUT);
        descarga_fechando = false;
        descarga_abrindo = false;
        descarga_habilitada = false;
        delay(2000);

        // se a descarga ainda estiver aberta, reinicio o esp
        if (digitalRead(PIN_DESCARGA_OUT) == HIGH)
        {
            ESP.restart();
        }
    }

    // se a descarga estiver habilitada
    if (descarga_habilitada)
    {
        // Se a descarga está habilitada e livre, permite novos clicks
        if (descarga_abrindo == false && descarga_fechando == false)
        {
            bt_descarga.tick(); // Handler para o botao da descarga.
        }
        else // se a descarga estiver em uso
        {
            // se estiver em modo OnDemand
            if (descarga_ModoOnDemand)
            {
                // os eventos de click só sao capturados quando há o tick
                // como estou à espera de ser avisado que o  botao foi liberado,
                // preciso manter o tick rodando
                bt_descarga.tick();

                // se atingiu o tempo maximo + margem de segurança
                if ((millis() - descarga_inicioTempoEspera) > (descarga_tempoEspera + descarga_MargemSeguranca))
                {
                    digitalWrite(PIN_BUZZER, HIGH);
                    // desativa o modo onDemand
                    descarga_ModoOnDemand = false;
                }
            }
            else // Se não estiver em modo onDemand
            {
                // se atingiu o tempo de abertura/fechamento
                if ((millis() - descarga_inicioTempoEspera) > descarga_tempoEspera)
                {
                    // se atingiu o tempo de abertura
                    if (descarga_abrindo)
                    {
                        DESCARGA_desligar();
                    }

                    // se atingiu o tempo de fechamento + margem de segurança
                    if (descarga_fechando &&
                        (millis() - descarga_inicioTempoEspera) > (descarga_tempoEspera + descarga_MargemSeguranca))
                    {
                        DESCARGA_liberar();
                    }
                }
            }
        }
    }
}

// Liga a eletrovalvula
void DESCARGA_ligar(byte modo)
{
    switch (modo)
    {
    case 1: // mijão
        descarga_tempoEspera = descarga_tempo1;
        break;

    case 2: // cagão
        descarga_tempoEspera = descarga_tempo2;
        break;
    case 3: // ondemand
        descarga_tempoEspera = descarga_tempoMax;
        descarga_ModoOnDemand = true;
        break;

    default:
        break;
    }

    descarga_ON = true;
    descarga_inicioTempoEspera = millis();
    descarga_abrindo = true;
    descarga_fechando = false;
    digitalWrite(PIN_DESCARGA_OUT, HIGH);
}

void DESCARGA_desligar()
{
    digitalWrite(PIN_DESCARGA_OUT, LOW);
    descarga_fechando = true;
    descarga_abrindo = false;
    descarga_inicioTempoEspera = millis();
}

void DESCARGA_liberar()
{
    descarga_ON = false;
    descarga_fechando = false;
    descarga_abrindo = false;
}

/// <summary>
/// /// Comandos que podem ser executados/interpretados
/// </summary>
/// <param name="executar">0 ou 1</param>
/// <param name="cmd">0 ou 1</param>
/// <param name="arg1">0 ou 1</param>
/// <param name="arg2">0 ou 1</param>
/// <param name="argSTR">String</param>
void COMANDOS(bool executar, int cmd, int arg1, int arg2, String argSTR)
{
    switch (cmd)
    {
    case 0: // POSSIVEL ERRO
        // Algumas funções como atoi retornam zero quando encontram erro
        // Por isto evito usar a case 0
        break;

    case 1:           // ALTERAR O ESTADO DA LUZ DA BANHEIRA
        if (executar) // alterar
        {
            luz_banheira();
        }
        else // atualizar
        {
            banheiraLed_ON = arg1;
        };
        break;

    case 2:
        break;
    case 3:
        break;
    case 4:
        break;
    case 5:
        break;

    default:
        break;
    }
}